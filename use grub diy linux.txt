使用grub进行diy linux

[root@localhost /]# fdisk -l

Disk /dev/sda: 21.4 GB, 21474836480 bytes
255 heads, 63 sectors/track, 2610 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *           1          38      305203+  83  Linux
/dev/sda2              39        2545    20137477+  83  Linux
/dev/sda3            2546        2610      522112+  82  Linux swap / Solaris

Disk /dev/sdb: 21.4 GB, 21474836480 bytes #这是新添加的一块硬盘
255 heads, 63 sectors/track, 2610 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

Disk /dev/sdb doesn't contain a valid partition table
[root@localhost /]# fdisk /dev/sdb #添加3个主分区，一个为内存交换分区
Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabel
Building a new DOS disklabel. Changes will remain in memory only,
until you decide to write them. After that, of course, the previous
content won't be recoverable.


The number of cylinders for this disk is set to 2610.
There is nothing wrong with that, but this is larger than 1024,
and could in certain setups cause problems with:
1) software that runs at boot time (e.g., old versions of LILO)
2) booting and partitioning software from other OSs
   (e.g., DOS FDISK, OS/2 FDISK)
Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)

Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 1
First cylinder (1-2610, default 1):
Using default value 1
Last cylinder or +size or +sizeM or +sizeK (1-2610, default 2610): +100M

Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 2
First cylinder (14-2610, default 14):
Using default value 14
Last cylinder or +size or +sizeM or +sizeK (14-2610, default 2610): +512M

Command (m for help): p

Disk /dev/sdb: 21.4 GB, 21474836480 bytes
255 heads, 63 sectors/track, 2610 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1               1          13      104391   83  Linux
/dev/sdb2              14          76      506047+  83  Linux

Command (m for help): n
Command action
   e   extended
   p   primary partition (1-4)
3
Invalid partition number for type `3'
Command action
   e   extended
   p   primary partition (1-4)
p
Partition number (1-4): 3
First cylinder (77-2610, default 77):
Using default value 77
Last cylinder or +size or +sizeM or +sizeK (77-2610, default 2610): +128M

Command (m for help): p

Disk /dev/sdb: 21.4 GB, 21474836480 bytes
255 heads, 63 sectors/track, 2610 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1               1          13      104391   83  Linux
/dev/sdb2              14          76      506047+  83  Linux
/dev/sdb3              77          93      136552+  83  Linux

Command (m for help): t
Partition number (1-4): 3
Hex code (type L to list codes): 82
Changed system type of partition 3 to 82 (Linux swap / Solaris)

Command (m for help): p

Disk /dev/sdb: 21.4 GB, 21474836480 bytes
255 heads, 63 sectors/track, 2610 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1               1          13      104391   83  Linux
/dev/sdb2              14          76      506047+  83  Linux
/dev/sdb3              77          93      136552+  82  Linux swap / Solaris

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.

WARNING: Re-reading the partition table failed with error 16: Device or resource busy.
The kernel still uses the old table.
The new table will be used at the next reboot.
Syncing disks.
[root@localhost /]# fdisk -l #查看刚才创建好分区信息

Disk /dev/sda: 21.4 GB, 21474836480 bytes
255 heads, 63 sectors/track, 2610 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *           1          38      305203+  83  Linux
/dev/sda2              39        2545    20137477+  83  Linux
/dev/sda3            2546        2610      522112+  82  Linux swap / Solaris

Disk /dev/sdb: 21.4 GB, 21474836480 bytes
255 heads, 63 sectors/track, 2610 cylinders
Units = cylinders of 16065 * 512 = 8225280 bytes

   Device Boot      Start         End      Blocks   Id  System
/dev/sdb1               1          13      104391   83  Linux
/dev/sdb2              14          76      506047+  83  Linux
/dev/sdb3              77          93      136552+  82  Linux swap / Solaris
[root@localhost /]# partprobe /dev/sdb
[root@localhost /]# mke2fs -j /dev/sdb1 #创建文件系统
mke2fs 1.39 (29-May-2006)
Filesystem label=
OS type: Linux
Block size=1024 (log=0)
Fragment size=1024 (log=0)
26104 inodes, 104388 blocks
5219 blocks (5.00%) reserved for the super user
First data block=1
Maximum filesystem blocks=67371008
13 block groups
8192 blocks per group, 8192 fragments per group
2008 inodes per group
Superblock backups stored on blocks:
        8193, 24577, 40961, 57345, 73729

Writing inode tables: done
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 38 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.
[root@localhost /]# mke2fs -j /dev/sdb2
mke2fs 1.39 (29-May-2006)
Filesystem label=
OS type: Linux
Block size=1024 (log=0)
Fragment size=1024 (log=0)
126976 inodes, 506044 blocks
25302 blocks (5.00%) reserved for the super user
First data block=1
Maximum filesystem blocks=67633152
62 block groups
8192 blocks per group, 8192 fragments per group
2048 inodes per group
Superblock backups stored on blocks:
        8193, 24577, 40961, 57345, 73729, 204801, 221185, 401409

Writing inode tables: done
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 35 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.
[root@localhost /]# mkswap /dev/sdb3
Setting up swapspace version 1, size = 139825 kB
[root@localhost /]# mkdir -p /test/{boot,sysroot}
[root@localhost /]# tree /test
/test
|-- boot
`-- sysroot

2 directories, 0 files
[root@localhost /]# mount /dev/sdb1 /test/boot #挂载刚才添加好的分区
[root@localhost /]# mount /dev/sdb2 /test/sysroot/
[root@localhost /]# mount
/dev/sda2 on / type ext3 (rw)
proc on /proc type proc (rw)
sysfs on /sys type sysfs (rw)
devpts on /dev/pts type devpts (rw,gid=5,mode=620)
/dev/sda1 on /boot type ext3 (rw)
tmpfs on /dev/shm type tmpfs (rw)
none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)
none on /proc/fs/vmblock/mountPoint type vmblock (rw)
sunrpc on /var/lib/nfs/rpc_pipefs type rpc_pipefs (rw)
/dev/sdb1 on /test/boot type ext3 (rw)
/dev/sdb2 on /test/sysroot type ext3 (rw)
[root@localhost /]# grub-install --root-directory=/test /dev/sdb #将grub安装在新添加的硬盘上
Probing devices to guess BIOS drives. This may take a long time.
Installation finished. No error reported.
This is the contents of the device map /test/boot/grub/device.map.
Check if this is correct or not. If any of the lines is incorrect,
fix it and re-run the script `grub-install'.

(fd0)   /dev/fd0
(hd0)   /dev/sda
(hd1)   /dev/sdb
[root@localhost /]# tree /test
/test
|-- boot
|   |-- grub
|   |   |-- device.map
|   |   |-- e2fs_stage1_5
|   |   |-- fat_stage1_5
|   |   |-- ffs_stage1_5
|   |   |-- iso9660_stage1_5
|   |   |-- jfs_stage1_5
|   |   |-- minix_stage1_5
|   |   |-- reiserfs_stage1_5
|   |   |-- stage1
|   |   |-- stage2
|   |   |-- ufs2_stage1_5
|   |   |-- vstafs_stage1_5
|   |   `-- xfs_stage1_5
|   `-- lost+found
`-- sysroot
    `-- lost+found

5 directories, 13 files
[root@localhost /]# cd /test/sysroot/
[root@localhost sysroot]# mkdir -p proc sys dev etc/rc.d bin sbin lib home root var tmp opt bo
[root@localhost sysroot]# which init
/sbin/init
[root@localhost sysroot]# cp /sbin/init sbin
[root@localhost sysroot]# ldd /sbin/init
        linux-vdso.so.1 =>  (0x00007fffa92ec000)
        libsepol.so.1 => /lib64/libsepol.so.1 (0x00002b33844c1000)
        libselinux.so.1 => /lib64/libselinux.so.1 (0x00002b3384707000)
        libc.so.6 => /lib64/libc.so.6 (0x00002b338491f000)
        libdl.so.2 => /lib64/libdl.so.2 (0x00002b3384c78000)
        /lib64/ld-linux-x86-64.so.2 (0x00002b33842a3000)
[root@localhost sysroot]# cp /lib64/libsepol.so.1 lib
[root@localhost sysroot]# cp /lib64/libselinux.so.1 lib
[root@localhost sysroot]# cp /lib64/libc.so.6 lib
[root@localhost sysroot]# cp /lib64/libdl.so.2 lib
[root@localhost sysroot]# cp /lib64/ld-linux-x86-64.so.2 lib
[root@localhost sysroot]# mkdir lib64
[root@localhost sysroot]# mv lib lib64
[root@localhost sysroot]# mv lib64/lib/ lib
[root@localhost sysroot]# mv -T lib lib64 #之前复制的目标文件夹不对，这里进行更改
[root@localhost sysroot]# mkdir lib
[root@localhost sysroot]# tree .
.
|-- bin
|-- boot
|-- dev
|-- etc
|   `-- rc.d
|-- home
|-- lib
|-- lib64
|   |-- ld-linux-x86-64.so.2
|   |-- libc.so.6
|   |-- libdl.so.2
|   |-- libselinux.so.1
|   `-- libsepol.so.1
|-- lost+found
|-- media
|-- misc
|-- mnt
|-- opt
|-- proc
|-- root
|-- sbin
|   `-- init
|-- sys
|-- tmp
`-- var

19 directories, 6 files
[root@localhost sysroot]# mkdir usr
[root@localhost sysroot]# which bash
/bin/bash
[root@localhost sysroot]# cp /bin/bash bin
[root@localhost sysroot]# ldd /bin/bash
        linux-vdso.so.1 =>  (0x00007fff423e5000)
        libtermcap.so.2 => /lib64/libtermcap.so.2 (0x00002b28c46f8000)
        libdl.so.2 => /lib64/libdl.so.2 (0x00002b28c48fb000)
        libc.so.6 => /lib64/libc.so.6 (0x00002b28c4aff000)
        /lib64/ld-linux-x86-64.so.2 (0x00002b28c44da000)
[root@localhost sysroot]# cp /lib64/libtermcap.so.2 lib64
[root@localhost sysroot]# cp /lib64/libdl.so.2 lib64
cp: overwrite `lib64/libdl.so.2'? n
[root@localhost sysroot]# cp /lib64/libdl.so.2 lib64
cp: overwrite `lib64/libdl.so.2'? n
[root@localhost sysroot]# cp /lib64/libc.so.6 lib64
cp: overwrite `lib64/libc.so.6'? n
[root@localhost sysroot]# cp ld-linux-x86-64.so.2 lib64
cp: cannot stat `ld-linux-x86-64.so.2': No such file or directory
[root@localhost sysroot]# cp /lib64/ld-linux-x86-64.so.2 lib64
cp: overwrite `lib64/ld-linux-x86-64.so.2'? n
[root@localhost sysroot]# cd bin
[root@localhost bin]# ln -s bash sh #创建软链接
[root@localhost bin]# ll
total 757
-rwxr-xr-x 1 root root 768664 Apr 11 16:56 bash
lrwxrwxrwx 1 root root      4 Apr 11 16:59 sh -> bash
[root@localhost bin]# chr
chroot  chrt
[root@localhost bin]# chr
chroot  chrt
[root@localhost bin]# chroot /test/sysroot/ #切换root，进入到交互模式，输入任何命令会执行不成功，输入exit退出，测试是否正确。
bash-3.2# ls
bash: ls: command not found
bash-3.2# bash
bash-3.2# exit
exit
bash-3.2# exit
exit
[root@localhost bin]# cd /test/sysroot/etc/
[root@localhost etc]# vi inittab
[root@localhost etc]# cat inittab
id:3:initdefault:
si::sysinit:/etc/rc.d/rc.sysinit
[root@localhost etc]# pwd
/test/sysroot/etc
[root@localhost etc]# vi rc.d/rc.sysinit
[root@localhost etc]# cat rc.d/rc.sysinit
#!/bin/bash
echo "Hello Jerry~~~~~~~~"
/bin/bash
[root@localhost etc]# chmod +x rc.d/rc.sysinit
[root@localhost etc]# bash -n rc.d/rc.sysinit
[root@localhost etc]# cd /test/boot
[root@localhost boot]# cp /boot/vmlinuz-2.6.18-308.el5 vmlinuz  #复制并重命名文件，后面grub.conf配置文件里懒得写版本号了。
[root@localhost boot]# cd /tmp
[root@localhost tmp]# mkdir myboot
[root@localhost tmp]# cd myboot
[root@localhost myboot]# zcat /boot/initrd-2.6.18-308.el5.img | cpio -id #解压，展开initrd
14774 blocks
[root@localhost myboot]# ls
bin  dev  etc  init  lib  proc  sbin  sys  sysroot
[root@localhost myboot]# vi init
[root@localhost myboot]# cat init #修改init信息
#!/bin/nash

mount -t proc /proc /proc
setquiet
echo Mounting proc filesystem
echo Mounting sysfs filesystem
mount -t sysfs /sys /sys
echo Creating /dev
mount -o mode=0755 -t tmpfs /dev /dev
mkdir /dev/pts
mount -t devpts -o gid=5,mode=620 /dev/pts /dev/pts
mkdir /dev/shm
mkdir /dev/mapper
echo Creating initial device nodes
mknod /dev/null c 1 3
mknod /dev/zero c 1 5
mknod /dev/urandom c 1 9
mknod /dev/systty c 4 0
mknod /dev/tty c 5 0
mknod /dev/console c 5 1
mknod /dev/ptmx c 5 2
mknod /dev/rtc c 10 135
mknod /dev/tty0 c 4 0
mknod /dev/tty1 c 4 1
mknod /dev/tty2 c 4 2
mknod /dev/tty3 c 4 3
mknod /dev/tty4 c 4 4
mknod /dev/tty5 c 4 5
mknod /dev/tty6 c 4 6
mknod /dev/tty7 c 4 7
mknod /dev/tty8 c 4 8
mknod /dev/tty9 c 4 9
mknod /dev/tty10 c 4 10
mknod /dev/tty11 c 4 11
mknod /dev/tty12 c 4 12
mknod /dev/ttyS0 c 4 64
mknod /dev/ttyS1 c 4 65
mknod /dev/ttyS2 c 4 66
mknod /dev/ttyS3 c 4 67
echo Setting up hotplug.
hotplug
echo Creating block device nodes.
mkblkdevs
echo "Loading ehci-hcd.ko module"
insmod /lib/ehci-hcd.ko
echo "Loading ohci-hcd.ko module"
insmod /lib/ohci-hcd.ko
echo "Loading uhci-hcd.ko module"
insmod /lib/uhci-hcd.ko
mount -t usbfs /proc/bus/usb /proc/bus/usb
echo "Loading jbd.ko module"
insmod /lib/jbd.ko
echo "Loading ext3.ko module"
insmod /lib/ext3.ko
echo "Loading scsi_mod.ko module"
insmod /lib/scsi_mod.ko
echo "Loading sd_mod.ko module"
insmod /lib/sd_mod.ko
echo "Loading scsi_transport_spi.ko module"
insmod /lib/scsi_transport_spi.ko
echo "Loading mptbase.ko module"
insmod /lib/mptbase.ko
echo "Loading mptscsih.ko module"
insmod /lib/mptscsih.ko
echo "Loading mptspi.ko module"
insmod /lib/mptspi.ko
echo "Loading libata.ko module"
insmod /lib/libata.ko
echo "Loading ata_piix.ko module"
insmod /lib/ata_piix.ko
echo "Loading ahci.ko module"
insmod /lib/ahci.ko
echo "Loading dm-mem-cache.ko module"
insmod /lib/dm-mem-cache.ko
echo "Loading dm-mod.ko module"
insmod /lib/dm-mod.ko
echo "Loading dm-log.ko module"
insmod /lib/dm-log.ko
echo "Loading dm-region_hash.ko module"
insmod /lib/dm-region_hash.ko
echo "Loading dm-message.ko module"
insmod /lib/dm-message.ko
echo "Loading dm-raid45.ko module"
insmod /lib/dm-raid45.ko
echo "Loading vmxnet3.ko module"
insmod /lib/vmxnet3.ko
echo "Loading pvscsi.ko module"
insmod /lib/pvscsi.ko
echo "Loading vmxnet.ko module"
insmod /lib/vmxnet.ko
echo Waiting for driver initialization.
stabilized --hash --interval 1000 /proc/scsi/scsi
mkblkdevs
#echo Scanning and configuring dmraid supported devices #修改部分，注释掉了
#resume LABEL=SWAP-sda3 #修改部分，注释掉了
echo Creating root device.
mkrootdev -t ext3 -o defaults,ro /dev/sda2  #修改部分，如果不是/dev/sda2就修改
echo Mounting root filesystem.
mount /sysroot
echo Setting up other filesystems.
setuproot
echo Switching to new root and running init.
switchroot
[root@localhost myboot]# find . | cpio -o -H newc --quiet | gzip -9 > /test/boot/initrd.gz #在将刚才解压的文件进行压缩归档，并移动到/test/boot目录下。
[root@localhost myboot]# cd /test/boot
[root@localhost boot]# ls
grub  initrd.gz  lost+found  vmlinuz
[root@localhost boot]# vi grub/grub.conf
[root@localhost boot]# cat grub/grub.conf
default=0
timeout=10
[root@localhost boot]# vi grub/grub.conf
[root@localhost boot]# cat grub/grub.conf
default=0
timeout=10
title Jerry's Linux
        root (hd0,0)
        kernel /vmlinuz ro root=/dev/sda2
        initrd /initrd.gz
[root@localhost boot]# sync
[root@localhost boot]# sync
[root@localhost boot]# sync
[root@localhost boot]# sync
[root@localhost boot]# cd /test/sysroot/etc
[root@localhost etc]# mkdir sysconfig
[root@localhost etc]# cd sysconfig/
[root@localhost sysconfig]# vi network
[root@localhost sysconfig]# cat network
HOSTNAME=www.jerry.com
[root@localhost sysconfig]# cd ..
[root@localhost etc]# vi rc.d/rc.sysinit
[root@localhost etc]# cat rc.d/rc.sysinit
#!/bin/bash
echo "Hello Jerry~~~~~~~~"

[ -f /etc/sysconfig/network ] && source /etc/sysconfig/network
[ -z $HOSTNAME ] && /bin/hostname localhost || /bin/hostname $HOSTNAME #测试下来，这一行执行出错，不知原因

/bin/bash
[root@localhost etc]# vi rc.d/rc.sysdone
[root@localhost etc]# cat rc.d/rc.sysdone
#!/bin/bash
exec /sbin/halt -p
[root@localhost etc]# chmod +x rc.d/rc.sysdone
[root@localhost etc]# which halt
/sbin/halt
[root@localhost etc]# cp /sbin/halt /test/sysroot/sbin
[root@localhost etc]# ldd /sbin/halt #用于关机，命令是：init 0
        linux-vdso.so.1 =>  (0x00007fff00dfd000)
        libc.so.6 => /lib64/libc.so.6 (0x00002ba9db759000)
        /lib64/ld-linux-x86-64.so.2 (0x00002ba9db53b000)
[root@localhost etc]# vi inittab
[root@localhost etc]# sync
[root@localhost etc]# sync
[root@localhost etc]# sync
[root@localhost etc]# sync
[root@localhost etc]#

接下来就是将这台VM挂起，然后新建VM，将这块新添加的磁盘做为系统启动，以rhel 5.8为基础测试启动成功。